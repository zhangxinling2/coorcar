"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
Page({
    redirectURL: '',
    data: {
        genderIndex: 0,
        birthData: '2022-1-1',
        licNo: "",
        licName: "",
        genders: ['未知', '男', '女', '其它'],
        licImgURL: '',
        status: 'UnSubmitted',
    },
    onUploadLic() {
        wx.chooseMedia({
            success: res => {
                this.setData({
                    licImgURL: res.tempFiles[0].tempFilePath
                });
            }
        });
        setTimeout(() => {
            this.setData({
                genderIndex: 1,
                birthData: '2000-1-1',
                licNo: '200001010',
                licName: '张三',
            });
        }, 1000);
    },
    onGenderChange(e) {
        this.setData({
            genderIndex: e.detail.value,
        });
    },
    onBirthChange(e) {
        this.setData({
            birthData: e.detail.value,
        });
    },
    onSubmit() {
        this.setData({
            status: 'Pending',
        });
        setTimeout(() => {
            this.Verified();
        }, 3000);
    },
    onRetry() {
        this.setData({
            status: 'UnSubmitted',
            licImgURL: '',
        });
    },
    Verified() {
        this.setData({
            status: 'Verified',
        });
        if (this.redirectURL) {
            wx.redirectTo({
                url: this.redirectURL,
            });
        }
    },
    onLoad(opt) {
        const o = opt;
        if (o.redirect) {
            this.redirectURL = decodeURIComponent(o.redirect);
        }
    },
    onReady() {
    },
    onShow() {
    },
    onHide() {
    },
    onUnload() {
    },
    onPullDownRefresh() {
    },
    onReachBottom() {
    },
    onShareAppMessage() {
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaXN0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyZWdpc3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBLElBQUksQ0FBQztJQUNILFdBQVcsRUFBQyxFQUFFO0lBSWQsSUFBSSxFQUFFO1FBQ0osV0FBVyxFQUFDLENBQUM7UUFDYixTQUFTLEVBQUMsVUFBVTtRQUNwQixLQUFLLEVBQUMsRUFBRTtRQUNSLE9BQU8sRUFBQyxFQUFFO1FBQ1YsT0FBTyxFQUFDLENBQUMsSUFBSSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsSUFBSSxDQUFDO1FBQzNCLFNBQVMsRUFBQyxFQUFFO1FBQ1osTUFBTSxFQUFDLGFBQXFFO0tBQzdFO0lBQ0QsV0FBVztRQUNULEVBQUUsQ0FBQyxXQUFXLENBQUM7WUFDYixPQUFPLEVBQUMsR0FBRyxDQUFBLEVBQUU7Z0JBQ1gsSUFBSSxDQUFDLE9BQU8sQ0FBQztvQkFDWCxTQUFTLEVBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZO2lCQUN4QyxDQUFDLENBQUE7WUFDSixDQUFDO1NBQ0YsQ0FBQyxDQUFBO1FBQ0YsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNkLElBQUksQ0FBQyxPQUFPLENBQUM7Z0JBQ1gsV0FBVyxFQUFDLENBQUM7Z0JBQ2IsU0FBUyxFQUFDLFVBQVU7Z0JBQ3BCLEtBQUssRUFBQyxXQUFXO2dCQUNqQixPQUFPLEVBQUMsSUFBSTthQUNiLENBQUMsQ0FBQTtRQUNKLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNYLENBQUM7SUFDRCxjQUFjLENBQUMsQ0FBSztRQUNsQixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsV0FBVyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSztTQUMzQixDQUFDLENBQUE7SUFDSixDQUFDO0lBQ0QsYUFBYSxDQUFDLENBQUs7UUFDakIsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLFNBQVMsRUFBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUs7U0FDekIsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUNELFFBQVE7UUFDTixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsTUFBTSxFQUFDLFNBQVM7U0FDakIsQ0FBQyxDQUFBO1FBQ0YsVUFBVSxDQUFDLEdBQUUsRUFBRTtZQUNiLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQTtRQUNqQixDQUFDLEVBQUMsSUFBSSxDQUFDLENBQUE7SUFDVCxDQUFDO0lBQ0QsT0FBTztRQUNMLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDWCxNQUFNLEVBQUMsYUFBYTtZQUNwQixTQUFTLEVBQUMsRUFBRTtTQUNiLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFDRCxRQUFRO1FBSU4sSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLE1BQU0sRUFBQyxVQUFVO1NBQ2xCLENBQUMsQ0FBQTtRQUNGLElBQUcsSUFBSSxDQUFDLFdBQVcsRUFBQztZQUNsQixFQUFFLENBQUMsVUFBVSxDQUFDO2dCQUNaLEdBQUcsRUFBQyxJQUFJLENBQUMsV0FBVzthQUNyQixDQUFDLENBQUE7U0FDSDtJQUVILENBQUM7SUFJRCxNQUFNLENBQUMsR0FBNkI7UUFDbEMsTUFBTSxDQUFDLEdBQXdCLEdBQUcsQ0FBQTtRQUNsQyxJQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUM7WUFDWixJQUFJLENBQUMsV0FBVyxHQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQTtTQUNoRDtJQUNILENBQUM7SUFLRCxPQUFPO0lBRVAsQ0FBQztJQUtELE1BQU07SUFFTixDQUFDO0lBS0QsTUFBTTtJQUVOLENBQUM7SUFLRCxRQUFRO0lBRVIsQ0FBQztJQUtELGlCQUFpQjtJQUVqQixDQUFDO0lBS0QsYUFBYTtJQUViLENBQUM7SUFLRCxpQkFBaUI7SUFFakIsQ0FBQztDQUNGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJvdXRpbmcgfSBmcm9tIFwiLi4vLi4vdXRpbHMvcm91dGluZ1wiO1xyXG5cclxuLy8gcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIudHNcclxuUGFnZSh7XHJcbiAgcmVkaXJlY3RVUkw6JycsXHJcbiAgLyoqXHJcbiAgICog6aG16Z2i55qE5Yid5aeL5pWw5o2uXHJcbiAgICovXHJcbiAgZGF0YToge1xyXG4gICAgZ2VuZGVySW5kZXg6MCxcclxuICAgIGJpcnRoRGF0YTonMjAyMi0xLTEnLFxyXG4gICAgbGljTm86XCJcIixcclxuICAgIGxpY05hbWU6XCJcIixcclxuICAgIGdlbmRlcnM6WyfmnKrnn6UnLCfnlLcnLCflpbMnLCflhbblroMnXSxcclxuICAgIGxpY0ltZ1VSTDonJyxcclxuICAgIHN0YXR1czonVW5TdWJtaXR0ZWQnIGFzICdVblN1Ym1pdHRlZCd8J1BlbmRpbmcnfCdTdWJtaXR0ZWRGYWlsZWQnfCdWZXJpZmllZCcsXHJcbiAgfSxcclxuICBvblVwbG9hZExpYygpe1xyXG4gICAgd3guY2hvb3NlTWVkaWEoe1xyXG4gICAgICBzdWNjZXNzOnJlcz0+e1xyXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgICAgICBsaWNJbWdVUkw6cmVzLnRlbXBGaWxlc1swXS50ZW1wRmlsZVBhdGhcclxuICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgICAgZ2VuZGVySW5kZXg6MSxcclxuICAgICAgICBiaXJ0aERhdGE6JzIwMDAtMS0xJyxcclxuICAgICAgICBsaWNObzonMjAwMDAxMDEwJyxcclxuICAgICAgICBsaWNOYW1lOiflvKDkuIknLFxyXG4gICAgICB9KVxyXG4gICAgfSwgMTAwMCk7XHJcbiAgfSxcclxuICBvbkdlbmRlckNoYW5nZShlOmFueSl7XHJcbiAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICBnZW5kZXJJbmRleDplLmRldGFpbC52YWx1ZSxcclxuICAgIH0pXHJcbiAgfSxcclxuICBvbkJpcnRoQ2hhbmdlKGU6YW55KXtcclxuICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgIGJpcnRoRGF0YTplLmRldGFpbC52YWx1ZSxcclxuICAgIH0pXHJcbiAgfSxcclxuICBvblN1Ym1pdCgpe1xyXG4gICAgdGhpcy5zZXREYXRhKHtcclxuICAgICAgc3RhdHVzOidQZW5kaW5nJyxcclxuICAgIH0pXHJcbiAgICBzZXRUaW1lb3V0KCgpPT57XHJcbiAgICAgIHRoaXMuVmVyaWZpZWQoKVxyXG4gICAgfSwzMDAwKVxyXG4gIH0sXHJcbiAgb25SZXRyeSgpe1xyXG4gICAgdGhpcy5zZXREYXRhKHtcclxuICAgICAgc3RhdHVzOidVblN1Ym1pdHRlZCcsXHJcbiAgICAgIGxpY0ltZ1VSTDonJyxcclxuICAgIH0pXHJcbiAgfSxcclxuICBWZXJpZmllZCgpe1xyXG4gICAgLy8gdGhpcy5zZXREYXRhKHtcclxuICAgIC8vICAgc3RhdGVzOidTdWJtaXR0ZWRGYWlsZWQnLFxyXG4gICAgLy8gfSlcclxuICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgIHN0YXR1czonVmVyaWZpZWQnLFxyXG4gICAgfSlcclxuICAgIGlmKHRoaXMucmVkaXJlY3RVUkwpe1xyXG4gICAgICB3eC5yZWRpcmVjdFRvKHtcclxuICAgICAgICB1cmw6dGhpcy5yZWRpcmVjdFVSTCxcclxuICAgICAgfSlcclxuICAgIH1cclxuICAgIFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLliqDovb1cclxuICAgKi9cclxuICBvbkxvYWQob3B0OlJlY29yZDwncmVkaXJlY3QnLHN0cmluZz4pIHtcclxuICAgIGNvbnN0IG86IHJvdXRpbmcuUmVnaXN0ZXJPcHRzID1vcHRcclxuICAgIGlmKG8ucmVkaXJlY3Qpe1xyXG4gICAgICB0aGlzLnJlZGlyZWN0VVJMPWRlY29kZVVSSUNvbXBvbmVudChvLnJlZGlyZWN0KVxyXG4gICAgfVxyXG4gIH0sXHJcblxyXG4gIC8qKlxyXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Yid5qyh5riy5p+T5a6M5oiQXHJcbiAgICovXHJcbiAgb25SZWFkeSgpIHtcclxuXHJcbiAgfSxcclxuXHJcbiAgLyoqXHJcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLmmL7npLpcclxuICAgKi9cclxuICBvblNob3coKSB7XHJcblxyXG4gIH0sXHJcblxyXG4gIC8qKlxyXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i6ZqQ6JePXHJcbiAgICovXHJcbiAgb25IaWRlKCkge1xyXG5cclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWNuOi9vVxyXG4gICAqL1xyXG4gIG9uVW5sb2FkKCkge1xyXG5cclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDpobXpnaLnm7jlhbPkuovku7blpITnkIblh73mlbAtLeebkeWQrOeUqOaIt+S4i+aLieWKqOS9nFxyXG4gICAqL1xyXG4gIG9uUHVsbERvd25SZWZyZXNoKCkge1xyXG5cclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDpobXpnaLkuIrmi4nop6blupXkuovku7bnmoTlpITnkIblh73mlbBcclxuICAgKi9cclxuICBvblJlYWNoQm90dG9tKCkge1xyXG5cclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDnlKjmiLfngrnlh7vlj7PkuIrop5LliIbkuqtcclxuICAgKi9cclxuICBvblNoYXJlQXBwTWVzc2FnZSgpIHtcclxuXHJcbiAgfVxyXG59KSJdfQ==